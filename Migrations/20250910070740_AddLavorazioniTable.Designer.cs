// <auto-generated />
using System;
using AiDbMaster.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AiDbMaster.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250910070740_AddLavorazioniTable")]
    partial class AddLavorazioniTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AiDbMaster.Models.AnagraficaArticoli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiceAlternativo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceAlternativo");

                    b.Property<string>("CodiceArticolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceArticolo");

                    b.Property<decimal>("Conversione")
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("Conversione");

                    b.Property<decimal>("ConversioneConfezione")
                        .HasColumnType("decimal(18,6)")
                        .HasColumnName("ConversioneConfezione");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Descrizione");

                    b.Property<string>("DescrizioneUlteriore")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DescrizioneUlteriore");

                    b.Property<string>("SecondaUnitaMisura")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("SecondaUnitàMisura");

                    b.Property<string>("TipoArticolo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("TipoArticolo");

                    b.Property<string>("UnitaMisura")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("UnitàMisura");

                    b.Property<string>("UnitaMisuraConfezione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("UnitàMisuraConfezione");

                    b.HasKey("Id");

                    b.ToTable("AnagraficaArticoli");
                });

            modelBuilder.Entity("AiDbMaster.Models.AnagraficaClienti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CAP");

                    b.Property<string>("Citta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Citta");

                    b.Property<short>("CodiceAgente")
                        .HasColumnType("smallint")
                        .HasColumnName("CodiceAgente");

                    b.Property<int>("CodiceCliente")
                        .HasColumnType("int")
                        .HasColumnName("CodiceCliente");

                    b.Property<string>("CodiceFiscale")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("an_codfis");

                    b.Property<string>("DescrizioneAggiuntiva")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("an_descr2");

                    b.Property<string>("FaxTelex")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("an_faxtlx");

                    b.Property<string>("Indirizzo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Indirizzo");

                    b.Property<string>("PartitaIva")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("an_pariva");

                    b.Property<string>("Provincia")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Provincia");

                    b.Property<string>("RagioneSociale")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RagioneSociale");

                    b.Property<string>("Telefono")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("Telefono");

                    b.Property<string>("TipoAnagrafica")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("an_tipo");

                    b.HasKey("Id");

                    b.ToTable("AnagraficaClienti");
                });

            modelBuilder.Entity("AiDbMaster.Models.AnagraficaFornitori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CAP");

                    b.Property<string>("Citta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Citta");

                    b.Property<string>("CodiceFiscale")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("an_codfis");

                    b.Property<int>("CodiceFornitore")
                        .HasColumnType("int")
                        .HasColumnName("CodiceFornitore");

                    b.Property<string>("DescrizioneAggiuntiva")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("an_descr2");

                    b.Property<string>("FaxTelex")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("an_faxtlx");

                    b.Property<string>("Indirizzo")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("Indirizzo");

                    b.Property<string>("PartitaIva")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("an_pariva");

                    b.Property<string>("Provincia")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Provincia");

                    b.Property<string>("RagioneSociale")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RagioneSociale");

                    b.Property<string>("Telefono")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("Telefono");

                    b.Property<string>("TipoAnagrafica")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("an_tipo");

                    b.HasKey("Id");

                    b.ToTable("AnagraficaFornitori");
                });

            modelBuilder.Entity("AiDbMaster.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("AiDbMaster.Models.ArticoliSostitutivi", b =>
                {
                    b.Property<string>("CodiceArticolo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceArticolo");

                    b.Property<string>("CodiceArticoloSostitutivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceArticoloSostitutivo");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("apa_note");

                    b.HasKey("CodiceArticolo", "CodiceArticoloSostitutivo");

                    b.ToTable("ArticoliSostitutivi");
                });

            modelBuilder.Entity("AiDbMaster.Models.CentroLavoro", b =>
                {
                    b.Property<int>("IdCentroLavoro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCentroLavoro"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<int?>("CapacitaOraria")
                        .HasColumnType("int");

                    b.Property<string>("CodiceCentro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("CostoOrarioStandard")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescrizioneCentro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdCentroLavoro");

                    b.HasIndex("Attivo")
                        .HasDatabaseName("IX_CentriLavoro_Attivo");

                    b.HasIndex("CodiceCentro")
                        .IsUnique()
                        .HasDatabaseName("IX_CentriLavoro_CodiceCentro")
                        .HasFilter("[CodiceCentro] IS NOT NULL");

                    b.HasIndex("DescrizioneCentro")
                        .HasDatabaseName("IX_CentriLavoro_DescrizioneCentro");

                    b.ToTable("CentriLavoro");
                });

            modelBuilder.Entity("AiDbMaster.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("DocumentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<bool>("IsConfidential")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UploadedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DocumentCategoryId");

                    b.HasIndex("UploadedById");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AiDbMaster.Models.DocumentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DocumentCategories");
                });

            modelBuilder.Entity("AiDbMaster.Models.DocumentPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("GrantedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("GrantedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GrantedById");

                    b.HasIndex("UserId");

                    b.ToTable("DocumentPermissions");
                });

            modelBuilder.Entity("AiDbMaster.Models.Lavorazioni", b =>
                {
                    b.Property<int>("IdLavorazione")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLavorazione"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("CodiceLavorazione")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime>("DataCreazione")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataUltimaModifica")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescrizioneLavorazione")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdLavorazione");

                    b.HasIndex("Attivo")
                        .HasDatabaseName("IX_Lavorazioni_Attivo");

                    b.HasIndex("CodiceLavorazione")
                        .IsUnique()
                        .HasDatabaseName("IX_Lavorazioni_CodiceLavorazione");

                    b.ToTable("Lavorazioni");
                });

            modelBuilder.Entity("AiDbMaster.Models.ListaOP", b =>
                {
                    b.Property<int>("IdListaOP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdListaOP"));

                    b.Property<short>("AnnoOrdine")
                        .HasColumnType("smallint");

                    b.Property<string>("CodiceArticolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("CostoOrario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime?>("DataFineOP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFinePrevista")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioOP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInizioSetup")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescrOrdine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DescrizioneArticolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdCentroLavoro")
                        .HasColumnType("int");

                    b.Property<int?>("IdOperatore")
                        .HasColumnType("int");

                    b.Property<int>("IdStato")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("NumeroOrdine")
                        .HasColumnType("int");

                    b.Property<int?>("Priorita")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantita")
                        .HasColumnType("decimal(27,9)");

                    b.Property<decimal>("QuantitaProdotta")
                        .HasColumnType("decimal(27,9)");

                    b.Property<int>("RigaOrdine")
                        .HasColumnType("int");

                    b.Property<string>("SerieOrdine")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("TempoCiclo")
                        .HasColumnType("int");

                    b.Property<int?>("TempoEffettivo")
                        .HasColumnType("int");

                    b.Property<int?>("TempoSetup")
                        .HasColumnType("int");

                    b.Property<string>("TipoOrdine")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("UnitaMisura")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IdListaOP");

                    b.HasIndex("CodiceArticolo")
                        .HasDatabaseName("IX_ListaOP_CodiceArticolo");

                    b.HasIndex("DataInizioOP")
                        .HasDatabaseName("IX_ListaOP_DataInizioOP");

                    b.HasIndex("IdCentroLavoro")
                        .HasDatabaseName("IX_ListaOP_IdCentroLavoro");

                    b.HasIndex("IdOperatore")
                        .HasDatabaseName("IX_ListaOP_IdOperatore");

                    b.HasIndex("IdStato")
                        .HasDatabaseName("IX_ListaOP_IdStato");

                    b.HasIndex("Priorita")
                        .HasDatabaseName("IX_ListaOP_Priorita");

                    b.HasIndex("TipoOrdine", "AnnoOrdine", "SerieOrdine", "NumeroOrdine")
                        .HasDatabaseName("IX_ListaOP_ChiaveComposita");

                    b.ToTable("ListaOP");
                });

            modelBuilder.Entity("AiDbMaster.Models.Operatore", b =>
                {
                    b.Property<int>("IdOperatore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperatore"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("CodiceOperatore")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataAssunzione")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LivelloCompetenza")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdOperatore");

                    b.HasIndex("CodiceOperatore")
                        .IsUnique()
                        .HasDatabaseName("IX_Operatori_CodiceOperatore");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Operatori_Email");

                    b.HasIndex("Nome", "Cognome")
                        .HasDatabaseName("IX_Operatori_NomeCognome");

                    b.ToTable("Operatori");
                });

            modelBuilder.Entity("AiDbMaster.Models.OrdiniRighe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("AnnoOrdine")
                        .HasColumnType("smallint")
                        .HasColumnName("AnnoOrdine");

                    b.Property<string>("CodiceArticolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceArticolo");

                    b.Property<short>("CodiceIva")
                        .HasColumnType("smallint")
                        .HasColumnName("mo_codiva");

                    b.Property<short>("CodiceMagazzino")
                        .HasColumnType("smallint")
                        .HasColumnName("mo_magaz");

                    b.Property<decimal>("ColliEvasi")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_coleva");

                    b.Property<decimal>("ColliPrenotati")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_colpre");

                    b.Property<DateTime>("DataConsegna")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataConsegna");

                    b.Property<string>("DescrizioneArticolo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DescrizioneArticolo");

                    b.Property<string>("FlagEvasionePrenotazione")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("mo_flevapre");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mo_note");

                    b.Property<decimal>("NumeroColli")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("NumeroColli");

                    b.Property<int>("NumeroOrdine")
                        .HasColumnType("int")
                        .HasColumnName("NumeroOrdine");

                    b.Property<decimal>("Prezzo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Prezzo");

                    b.Property<decimal>("PrezzoConIva")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_preziva");

                    b.Property<decimal>("PrezzoListino")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_prelist");

                    b.Property<decimal>("PrezzoValuta")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_prezvalc");

                    b.Property<decimal>("Provvigione")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_provv");

                    b.Property<decimal>("Quantita")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Quantita");

                    b.Property<decimal>("QuantitaEvasa")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_quaeva");

                    b.Property<decimal>("QuantitaPrenotata")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_quapre");

                    b.Property<int>("RigaOrdine")
                        .HasColumnType("int")
                        .HasColumnName("RigaOrdine");

                    b.Property<decimal>("Sconto1")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_scont1");

                    b.Property<decimal>("Sconto2")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_scont2");

                    b.Property<decimal>("Sconto3")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("mo_scont3");

                    b.Property<string>("SerieOrdine")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("SerieOrdine");

                    b.Property<string>("TipoOrdine")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("TipoOrdine");

                    b.Property<string>("UnitaMisura")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("UnitaMisura");

                    b.Property<string>("UnitaMisuraColli")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("UnitaMisuraColli");

                    b.Property<decimal>("ValoreRiga")
                        .HasColumnType("money")
                        .HasColumnName("ValoreRiga");

                    b.HasKey("Id");

                    b.HasIndex("CodiceArticolo")
                        .HasDatabaseName("IX_OrdiniRighe_CodiceArticolo");

                    b.HasIndex("CodiceMagazzino");

                    b.HasIndex("DataConsegna")
                        .HasDatabaseName("IX_OrdiniRighe_DataConsegna");

                    b.HasIndex("TipoOrdine", "AnnoOrdine", "SerieOrdine", "NumeroOrdine")
                        .HasDatabaseName("IX_OrdiniRighe_ChiaveComposita");

                    b.ToTable("OrdiniRighe");
                });

            modelBuilder.Entity("AiDbMaster.Models.OrdiniTestate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("AnnoOrdine")
                        .HasColumnType("smallint")
                        .HasColumnName("AnnoOrdine");

                    b.Property<short>("CodiceAgente")
                        .HasColumnType("smallint")
                        .HasColumnName("CodiceAgente");

                    b.Property<int>("CodiceCliente")
                        .HasColumnType("int")
                        .HasColumnName("CodiceCliente");

                    b.Property<short>("CodiceMagazzino")
                        .HasColumnType("smallint")
                        .HasColumnName("td_magaz");

                    b.Property<DateTime?>("DataConsegna")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataConsegna");

                    b.Property<DateTime>("DataOrdine")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataOrdine");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("td_note");

                    b.Property<int>("NumeroOrdine")
                        .HasColumnType("int")
                        .HasColumnName("NumeroOrdine");

                    b.Property<string>("Riferimento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("td_riferim");

                    b.Property<string>("SerieOrdine")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("SerieOrdine");

                    b.Property<short>("TipoBollaFattura")
                        .HasColumnType("smallint")
                        .HasColumnName("td_tipobf");

                    b.Property<string>("TipoOrdine")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("TipoOrdine");

                    b.Property<int>("TotaleColli")
                        .HasColumnType("int")
                        .HasColumnName("TotaleColli");

                    b.HasKey("Id");

                    b.HasIndex("CodiceAgente");

                    b.HasIndex("CodiceCliente")
                        .HasDatabaseName("IX_OrdiniTestate_CodiceCliente");

                    b.HasIndex("CodiceMagazzino");

                    b.HasIndex("DataOrdine")
                        .HasDatabaseName("IX_OrdiniTestate_DataOrdine");

                    b.HasIndex("TipoOrdine", "AnnoOrdine", "SerieOrdine", "NumeroOrdine")
                        .IsUnique()
                        .HasDatabaseName("IX_OrdiniTestate_ChiaveComposita");

                    b.ToTable("OrdiniTestate");
                });

            modelBuilder.Entity("AiDbMaster.Models.ProgressiviArticoli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodiceArticolo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CodiceArticolo");

                    b.Property<short>("CodiceMagazzino")
                        .HasColumnType("smallint")
                        .HasColumnName("CodiceMagazzino");

                    b.Property<decimal>("Esistenza")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Esistenza");

                    b.Property<decimal>("Impegnato")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Impegnato");

                    b.Property<decimal>("Ordinato")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Ordinato");

                    b.Property<decimal>("Prenotato")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Prenotato");

                    b.HasKey("Id");

                    b.ToTable("ProgressiviArticoli");
                });

            modelBuilder.Entity("AiDbMaster.Models.StatoOP", b =>
                {
                    b.Property<int>("IdStato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStato"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit");

                    b.Property<string>("CodiceStato")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("DescrizioneStato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Ordine")
                        .HasColumnType("int");

                    b.HasKey("IdStato");

                    b.HasIndex("CodiceStato")
                        .IsUnique()
                        .HasDatabaseName("IX_StatiOP_CodiceStato");

                    b.HasIndex("Ordine")
                        .HasDatabaseName("IX_StatiOP_Ordine");

                    b.ToTable("StatiOP");

                    b.HasData(
                        new
                        {
                            IdStato = 1,
                            Attivo = true,
                            CodiceStato = "EM",
                            DescrizioneStato = "Emesso",
                            Ordine = 1
                        },
                        new
                        {
                            IdStato = 2,
                            Attivo = true,
                            CodiceStato = "PR",
                            DescrizioneStato = "Produzione",
                            Ordine = 2
                        },
                        new
                        {
                            IdStato = 3,
                            Attivo = true,
                            CodiceStato = "CH",
                            DescrizioneStato = "Chiuso",
                            Ordine = 4
                        },
                        new
                        {
                            IdStato = 4,
                            Attivo = true,
                            CodiceStato = "SO",
                            DescrizioneStato = "Sospeso",
                            Ordine = 3
                        });
                });

            modelBuilder.Entity("AiDbMaster.Models.TabellaAgenti", b =>
                {
                    b.Property<short>("CodiceAgente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasColumnName("CodiceAgente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("CodiceAgente"));

                    b.Property<bool>("Attivo")
                        .HasColumnType("bit")
                        .HasColumnName("Attivo");

                    b.Property<string>("CapAgente")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CAPAgente");

                    b.Property<string>("CittaAgente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CittaAgente");

                    b.Property<string>("DescrizioneAgente")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DescrizioneAgente");

                    b.Property<string>("IndirizzoAgente")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("IndirizzoAgente");

                    b.Property<string>("ProvinciaAgente")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ProvinciaAgente");

                    b.HasKey("CodiceAgente");

                    b.ToTable("TabellaAgenti");
                });

            modelBuilder.Entity("AiDbMaster.Models.TabellaMagazzini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<short>("CodiceMagazzino")
                        .HasColumnType("smallint")
                        .HasColumnName("CodiceMagazzino");

                    b.Property<string>("DescrizioneMagazzino")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DescrizioneMagazzino");

                    b.HasKey("Id");

                    b.ToTable("TabellaMagazzini");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AiDbMaster.Models.Document", b =>
                {
                    b.HasOne("AiDbMaster.Models.DocumentCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AiDbMaster.Models.DocumentCategory", null)
                        .WithMany("Documents")
                        .HasForeignKey("DocumentCategoryId");

                    b.HasOne("AiDbMaster.Models.ApplicationUser", "UploadedBy")
                        .WithMany()
                        .HasForeignKey("UploadedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("UploadedBy");
                });

            modelBuilder.Entity("AiDbMaster.Models.DocumentPermission", b =>
                {
                    b.HasOne("AiDbMaster.Models.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.ApplicationUser", "GrantedBy")
                        .WithMany()
                        .HasForeignKey("GrantedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AiDbMaster.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("GrantedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AiDbMaster.Models.ListaOP", b =>
                {
                    b.HasOne("AiDbMaster.Models.CentroLavoro", "CentroLavoro")
                        .WithMany("OrdiniProduzione")
                        .HasForeignKey("IdCentroLavoro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.Operatore", "Operatore")
                        .WithMany("OrdiniProduzione")
                        .HasForeignKey("IdOperatore")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AiDbMaster.Models.StatoOP", "Stato")
                        .WithMany("OrdiniProduzione")
                        .HasForeignKey("IdStato")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CentroLavoro");

                    b.Navigation("Operatore");

                    b.Navigation("Stato");
                });

            modelBuilder.Entity("AiDbMaster.Models.OrdiniRighe", b =>
                {
                    b.HasOne("AiDbMaster.Models.AnagraficaArticoli", "Articolo")
                        .WithMany()
                        .HasForeignKey("CodiceArticolo")
                        .HasPrincipalKey("CodiceArticolo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.TabellaMagazzini", "Magazzino")
                        .WithMany()
                        .HasForeignKey("CodiceMagazzino")
                        .HasPrincipalKey("CodiceMagazzino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.OrdiniTestate", "Testata")
                        .WithMany("Righe")
                        .HasForeignKey("TipoOrdine", "AnnoOrdine", "SerieOrdine", "NumeroOrdine")
                        .HasPrincipalKey("TipoOrdine", "AnnoOrdine", "SerieOrdine", "NumeroOrdine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articolo");

                    b.Navigation("Magazzino");

                    b.Navigation("Testata");
                });

            modelBuilder.Entity("AiDbMaster.Models.OrdiniTestate", b =>
                {
                    b.HasOne("AiDbMaster.Models.TabellaAgenti", "Agente")
                        .WithMany()
                        .HasForeignKey("CodiceAgente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.AnagraficaClienti", "Cliente")
                        .WithMany()
                        .HasForeignKey("CodiceCliente")
                        .HasPrincipalKey("CodiceCliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.TabellaMagazzini", "Magazzino")
                        .WithMany()
                        .HasForeignKey("CodiceMagazzino")
                        .HasPrincipalKey("CodiceMagazzino")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("Cliente");

                    b.Navigation("Magazzino");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AiDbMaster.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AiDbMaster.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AiDbMaster.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AiDbMaster.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AiDbMaster.Models.CentroLavoro", b =>
                {
                    b.Navigation("OrdiniProduzione");
                });

            modelBuilder.Entity("AiDbMaster.Models.DocumentCategory", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("AiDbMaster.Models.Operatore", b =>
                {
                    b.Navigation("OrdiniProduzione");
                });

            modelBuilder.Entity("AiDbMaster.Models.OrdiniTestate", b =>
                {
                    b.Navigation("Righe");
                });

            modelBuilder.Entity("AiDbMaster.Models.StatoOP", b =>
                {
                    b.Navigation("OrdiniProduzione");
                });
#pragma warning restore 612, 618
        }
    }
}
